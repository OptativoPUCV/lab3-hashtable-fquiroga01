Wed 06 Sep 2023 02:08:27 AM UTC: 
 hashmap.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:65:1: error: control reaches end of non-void function [-Werror=return-type]
   65 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
50ccce0
Wed 06 Sep 2023 02:08:44 AM UTC: 
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:65:1: error: control reaches end of non-void function [-Werror=return-type]
   65 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
7444356
Wed 06 Sep 2023 02:10:51 AM UTC: 
 hashmap.c | 9 +++++++++
 1 file changed, 9 insertions(+)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:65:17: error: assignment to ‘long int’ from ‘void *’ makes integer from pointer without a cast [-Werror=int-conversion]
   65 |   map->capacity = NULL;
      |                 ^
hashmap.c:67:19: error: ‘HashNode’ undeclared (first use in this function)
   67 |   map->buckets = (HashNode *) calloc (capacity(sizeof(HashNode)));
      |                   ^~~~~~~~
hashmap.c:67:19: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:67:29: error: expected expression before ‘)’ token
   67 |   map->buckets = (HashNode *) calloc (capacity(sizeof(HashNode)));
      |                             ^
cc1: all warnings being treated as errors
Compilation failed
b0f203e
Wed 06 Sep 2023 02:12:36 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:65:17: error: assignment to ‘long int’ from ‘void *’ makes integer from pointer without a cast [-Werror=int-conversion]
   65 |   map->capacity = NULL;
      |                 ^
hashmap.c:67:19: error: ‘Hash’ undeclared (first use in this function); did you mean ‘hash’?
   67 |   map->buckets = (Hash **) calloc (capacity(sizeof(Hash));
      |                   ^~~~
      |                   hash
hashmap.c:67:19: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:67:26: error: expected expression before ‘)’ token
   67 |   map->buckets = (Hash **) calloc (capacity(sizeof(Hash));
      |                          ^
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test3’:
test.c:126:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:126:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘createMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
test.c:512: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
1da20e4
Wed 06 Sep 2023 02:13:40 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:67:19: error: ‘Hash’ undeclared (first use in this function); did you mean ‘hash’?
   67 |   map->buckets = (Hash **) calloc (capacity(sizeof(Hash));
      |                   ^~~~
      |                   hash
hashmap.c:67:19: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:67:26: error: expected expression before ‘)’ token
   67 |   map->buckets = (Hash **) calloc (capacity(sizeof(Hash));
      |                          ^
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test3’:
test.c:126:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:126:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘createMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
test.c:512: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
c475af7
Wed 06 Sep 2023 02:14:46 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:67:19: error: ‘Hash’ undeclared (first use in this function); did you mean ‘hash’?
   67 |   map->buckets = (Hash **) calloc (capacity(sizeof(Hash));
      |                   ^~~~
      |                   hash
hashmap.c:67:19: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:67:26: error: expected expression before ‘)’ token
   67 |   map->buckets = (Hash **) calloc (capacity(sizeof(Hash));
      |                          ^
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test3’:
test.c:126:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:126:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘createMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
test.c:512: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
5b3642a
Wed 06 Sep 2023 02:15:17 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:67:19: error: ‘HashNode’ undeclared (first use in this function)
   67 |   map->buckets = (HashNode **) calloc (capacity(sizeof(HashNode));
      |                   ^~~~~~~~
hashmap.c:67:19: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:67:30: error: expected expression before ‘)’ token
   67 |   map->buckets = (HashNode **) calloc (capacity(sizeof(HashNode));
      |                              ^
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test3’:
test.c:126:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:126:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘createMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
test.c:512: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
9c7a9f7
Wed 06 Sep 2023 02:15:40 AM UTC: 
 hashmap.c | 1 +
 1 file changed, 1 insertion(+)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:67:19: error: ‘HashNode’ undeclared (first use in this function)
   67 |   map->buckets = (HashNode **) calloc (capacity(sizeof(HashNode));
      |                   ^~~~~~~~
hashmap.c:67:19: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:67:30: error: expected expression before ‘)’ token
   67 |   map->buckets = (HashNode **) calloc (capacity(sizeof(HashNode));
      |                              ^
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test3’:
test.c:126:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:126:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘createMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
test.c:512: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
eec54d5
Wed 06 Sep 2023 02:21:58 AM UTC: 
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:67:19: error: ‘HashNode’ undeclared (first use in this function)
   67 |   map->buckets = (HashNode **) calloc (capacity(sizeof(HashNode));
      |                   ^~~~~~~~
hashmap.c:67:19: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:67:30: error: expected expression before ‘)’ token
   67 |   map->buckets = (HashNode **) calloc (capacity(sizeof(HashNode));
      |                              ^
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test3’:
test.c:126:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:126:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:26:19: note: expected ‘char *’ but argument is of type ‘int’
   26 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘createMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
test.c:512: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
baf74df
Wed 06 Sep 2023 02:23:21 AM UTC: 
 hashmap.c | 7 +++++++
 1 file changed, 7 insertions(+)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:74:19: error: ‘HashNode’ undeclared (first use in this function)
   74 |   map->buckets = (HashNode **) calloc (capacity(sizeof(HashNode));
      |                   ^~~~~~~~
hashmap.c:74:19: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:74:30: error: expected expression before ‘)’ token
   74 |   map->buckets = (HashNode **) calloc (capacity(sizeof(HashNode));
      |                              ^
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:26:27: note: expected ‘char *’ but argument is of type ‘int’
   26 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test3’:
test.c:126:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:33:19: note: expected ‘char *’ but argument is of type ‘int’
   33 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:126:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:33:19: note: expected ‘char *’ but argument is of type ‘int’
   33 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:33:19: note: expected ‘char *’ but argument is of type ‘int’
   33 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:127:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:33:19: note: expected ‘char *’ but argument is of type ‘int’
   33 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:13: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |             ^~~~~~~~~~~~~~~
      |             |
      |             int
In file included from test.c:4:
hashmap.c:33:19: note: expected ‘char *’ but argument is of type ‘int’
   33 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c:128:39: error: passing argument 1 of ‘hash’ makes pointer from integer without a cast [-Werror=int-conversion]
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                       ^~~~~~~~~~~~~~~
      |                                       |
      |                                       int
In file included from test.c:4:
hashmap.c:33:19: note: expected ‘char *’ but argument is of type ‘int’
   33 | long hash( char * key, long capacity) {
      |            ~~~~~~~^~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:49:38: note: expected ‘char *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:49:50: note: expected ‘void *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:49:38: note: expected ‘char *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:49:50: note: expected ‘void *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:49:38: note: expected ‘char *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:49:50: note: expected ‘void *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:49:38: note: expected ‘char *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:49:50: note: expected ‘void *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:49:38: note: expected ‘char *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:49:50: note: expected ‘void *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:49:38: note: expected ‘char *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:49:50: note: expected ‘void *’ but argument is of type ‘int’
   49 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:26:27: note: expected ‘char *’ but argument is of type ‘int’
   26 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:26:40: note: expected ‘void *’ but argument is of type ‘int’
   26 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:26:27: note: expected ‘char *’ but argument is of type ‘int’
   26 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:26:40: note: expected ‘void *’ but argument is of type ‘int’
   26 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘createMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
test.c:512: error: control reaches end of non-void function [-Werror=return-type]
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
41c1e98
Wed 06 Sep 2023 02:24:37 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:74:47: error: called object ‘capacity’ is not a function or function pointer
   74 |   map->buckets = (struct HashNode **) calloc (capacity(sizeof(struct HashNode)));
      |                                               ^~~~~~~~
hashmap.c:61:26: note: declared here
   61 | HashMap * createMap(long capacity)
      |                     ~~~~~^~~~~~~~
hashmap.c:74:39: error: too few arguments to function ‘calloc’
   74 |   map->buckets = (struct HashNode **) calloc (capacity(sizeof(struct HashNode)));
      |                                       ^~~~~~
In file included from test.c:2:
/nix/store/4pqv2mwdn88h7xvsm7a5zplrd8sxzvw0-glibc-2.35-163-dev/include/stdlib.h:543:14: note: declared here
  543 | extern void *calloc (size_t __nmemb, size_t __size)
      |              ^~~~~~
Compilation failed
7f2981b
Wed 06 Sep 2023 02:25:03 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:74:16: error: assignment to ‘Pair **’ from incompatible pointer type ‘struct HashNode **’ [-Werror=incompatible-pointer-types]
   74 |   map->buckets = (struct HashNode **) calloc (capacity, sizeof(struct HashNode));
      |                ^
cc1: all warnings being treated as errors
Compilation failed
8909b27
Wed 06 Sep 2023 02:26:24 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:74:16: error: assignment to ‘Pair **’ from incompatible pointer type ‘struct HashNode **’ [-Werror=incompatible-pointer-types]
   74 |   map->buckets = (struct HashNode **) calloc (capacity, sizeof(struct HashNode *));
      |                ^
cc1: all warnings being treated as errors
Compilation failed
e4cb69f
Wed 06 Sep 2023 02:31:10 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  1|5
total_score: 10/70
1e956cc
Wed 06 Sep 2023 02:32:26 AM UTC: 
 hashmap.c | 6 ------
 1 file changed, 6 deletions(-)
 tests:  1|5
total_score: 10/70
965d970
Wed 06 Sep 2023 02:38:17 AM UTC: 
 hashmap.c | 21 +++++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:49:7: error: implicit declaration of function ‘search’; did you mean ‘bsearch’? [-Werror=implicit-function-declaration]
   49 |   if (search(map, key) != NULL)
      |       ^~~~~~
      |       bsearch
hashmap.c:49:24: error: comparison between pointer and integer [-Werror]
   49 |   if (search(map, key) != NULL)
      |                        ^~
hashmap.c:56:7: error: ‘position’ undeclared (first use in this function)
   56 |       position = (position + 1) % map->capacity;
      |       ^~~~~~~~
hashmap.c:56:7: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:58:3: error: unknown type name ‘pair’; did you mean ‘Pair’?
   58 |   pair newPair = createPair(key, value);
      |   ^~~~
      |   Pair
hashmap.c:58:18: error: initialization of ‘int’ from ‘Pair *’ makes integer from pointer without a cast [-Werror=int-conversion]
   58 |   pair newPair = createPair(key, value);
      |                  ^~~~~~~~~~
hashmap.c:59:21: error: assignment to ‘Pair *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
   59 |   map->buckets[pos] = newPair;
      |                     ^
cc1: all warnings being treated as errors
Compilation failed
950b3c3
Wed 06 Sep 2023 02:38:38 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:56:7: error: ‘position’ undeclared (first use in this function)
   56 |       position = (position + 1) % map->capacity;
      |       ^~~~~~~~
hashmap.c:56:7: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:58:3: error: unknown type name ‘pair’; did you mean ‘Pair’?
   58 |   pair newPair = createPair(key, value);
      |   ^~~~
      |   Pair
hashmap.c:58:18: error: initialization of ‘int’ from ‘Pair *’ makes integer from pointer without a cast [-Werror=int-conversion]
   58 |   pair newPair = createPair(key, value);
      |                  ^~~~~~~~~~
hashmap.c:59:21: error: assignment to ‘Pair *’ from ‘int’ makes pointer from integer without a cast [-Werror=int-conversion]
   59 |   map->buckets[pos] = newPair;
      |                     ^
cc1: all warnings being treated as errors
Compilation failed
b26836f
